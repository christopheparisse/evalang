install.packages("tm")
?tm
??tm
txt <- system.file("texts", "txt", package = "tm")
IPCCEn <- VCorpus(DirSource(txt, encoding = "UTF-8"), readerControl = list(language = "en"))
library(tm
)
IPCCEn <- VCorpus(DirSource(txt, encoding = "UTF-8"), readerControl = list(language = "en"))
View(IPCCEn)
IPCCEn[["AR2_en.txt"]][["content"]]
(IPCCEn[CR1]  <- VCorpus(DirSource(txt, encoding = "UTF-8"), readerControl = list(language = "en[CR2] ")))
(IPCCEn  <- VCorpus(DirSource(txt, encoding = "UTF-8"), readerControl = list(language = "en")))
IPCCEn2 <- tm_map(IPCCEn, stripWhitespace)
IPCCEn3 <- tm_map(IPCCEn2, removeWords, stopwords("english"))
IPCCEn3[1]
IPCCEn3[1]["Content"]
IPCCEn3[1]$Content
View(IPCCEn3)
View(IPCCEn3)
IPCCEn3$AR1_en.txt
IPCCEn3$AR1_en.txt$content
str(IPCCEn3$AR1_en.txt)
str(IPCCEn3)
IPCCEn3$AR1_en.txt$content[10]
str(IPCCEn3$AR1_en.txt$content)
IPCCEn3$AR1_en.txt
str(IPCCEn3$AR1_en.txt)
IPCCEn4 <- tm_map(IPCCEn3, stemDocument)
install.packages("SnowballC")
install.packages("Rtools")
IPCCEn4 <- tm_map(IPCCEn3, stemDocument)
dtm <-DocumentTermMatrix(IPCCEn4)
inspect(dtm)
inspect(dtm)
findFreqTerms(dtm, 20)
install.packages("tidytext")
library(tidytext)
df <- tidy(dtm)
PCA(df)
str(df)
library("FactoMineR")
install.packages("FactoMineR")
PCA(dtm)
library("FactoMineR")
PCA(dtm)
str(dtm)
decathlon2.active
decathlon2
install.packages("factoextra")
data(decathlon2)
library(factoextra)
data(decathlon2)
decathlon2.active <- decathlon2[1:23, 1:10]
str(decathlon2)
length(decathlon2$X100m)
length(decathlon2$Shot.put)
res.pca <- PCA(decathlon2.active, graph = FALSE)
PCA(dtm)
dtm2 <- cbind(dtm$i,dtm$j,dtm$v)i
dtm2 <- cbind(dtm$i,dtm$j,dtm$v)
dtm2 <- data.frame(dtm$i,dtm$j,dtm$v)
PCA(dtm2)
?anova
a <- c(1,2,3,4,5)
b <- c(12, 24, 48, 90, 130)
c <- cbind(a,b)
c
c <- as.datatable(cbind(a,b))
c <- as.data.table(cbind(a,b))
c <- as.data.frame(cbind(a,b))
c
lm(a ~ b, data=c)
anova(lm(a ~ b, data=c))
aov(lm(a ~ b, data=c))
summary(lm(a ~ b, data=c))
plot(a ~ b, data=c)
plot(lm(a ~ b, data=c))
lmer
test.cor(a, b)
cor.test(a, b)
cor.test(a, b)
cor.test(a, b, method='kendall')
c$a
install.packages(c("backports", "callr", "car", "carData", "cli", "clipr", "colorspace", "cowplot", "data.table", "dendextend", "digest", "dplyr", "ellipse", "ellipsis", "FactoMineR", "generics", "ggplot2", "ggpubr", "glue", "haven", "hunspell", "isoband", "ISOcodes", "labeling", "lme4", "magrittr", "maptools", "nloptr", "NLP", "openxlsx", "pillar", "pkgbuild", "pkgload", "processx", "ps", "purrr", "quantreg", "R6", "Rcpp", "readr", "reshape2", "rlang", "rprojroot", "rstudioapi", "scales", "slam", "sp", "stopwords", "stringi", "testthat", "tibble", "tidyr", "tidyselect", "tidytext", "tm", "vctrs", "withr", "xml2", "zip"))
install.packages("brms")
?brms
??brms
library(brms)
library('openxlsx')
setwd("/brainstorm/evalang/tcof")
clan <- read.xlsx("tcofCLANMOR.xlsx")
perceo <- read.xlsx("tcofTTGPERCEO.xlsx")
clan$annees <- as.numeric(clan$annees)
perceo$annees <- as.numeric(perceo$annees)
clan.chi <- clan[clan['loc']=='CHI',]
clan.chi.trans <- clan.chi[clan.chi['dossier']=='TRANS',]
str(clan.chi)
clan.adu <- clan[clan['loc']=='ADU',]
str(clan.adu)
perceo.adu <- perceo[perceo['loc']=='ADU',]
str(perceo.adu)
perceo.chi <- perceo[perceo['loc']=='CHI',]
perceo.chi.trans <- perceo.chi[perceo.chi['dossier']=='TRANS',]
str(perceo.chi)
tab <- tapply(clan.chi$INF, clan.chi$annees, mean)
barplot(tab)
title("INF Enfants CLAN")
tab <- tapply(clan.adu$INF, clan.adu$annees, mean)
barplot(tab)
title("INF Adultes CLAN")
tab <- tapply(perceo.chi$INF, perceo.chi$annees, mean)
barplot(tab)
title("INF Enfants Perceo")
tab <- tapply(perceo.adu$INF, perceo.adu$annees, mean)
barplot(tab)
title("INF Adultes Perceo")
cor.test(as.numeric(clan.chi$annees), clan.chi$INF)
cor.test(as.numeric(perceo.chi$annees), perceo.chi$INF)
cor.test(as.numeric(clan.chi$INF), perceo.chi$INF)
cmp <- function(champ) {
print(cor.test(as.numeric(clan.chi$annees), clan.chi[,champ]))
print(cor.test(as.numeric(perceo.chi$annees), perceo.chi[,champ]))
print(cor.test(as.numeric(clan.chi$INF), perceo.chi[,champ]))
}
cmp("INF")
cmpp <- function(champ) {
print((cor.test(as.numeric(clan.chi$annees), clan.chi[,champ]))$p.value)
print((cor.test(as.numeric(perceo.chi$annees), perceo.chi[,champ]))$p.value)
print((cor.test(as.numeric(clan.chi$INF), perceo.chi[,champ]))$p.value)
}
cmpp(("FUT"))
cmpp(("COND"))
cmpp(("SUBJ"))
cmpp(("INF"))
cmpp(("prorel"))
cmpp(("conj"))
cmpp(("comme"))
cmpp(("prep+inf"))
cmpp(("n+conj+det"))
cmpp(("n+adj"))
cmpp(("n+prep+n"))
cmpp(("cest+++que"))
cmpp(("ya+++qu"))
cmpp(("v+inf"))
cmpp(("dit+qu"))
cmpp(("plus+qu"))
tab <- tapply(clan.chi$FUT, clan.chi$annees, mean)
barplot(tab)
title("FUT Enfants CLAN")
tab <- tapply(clan.adu$FUT, clan.adu$annees, mean)
barplot(tab)
title("FUT Adultes CLAN")
tab <- tapply(perceo.chi$FUT, perceo.chi$annees, mean)
barplot(tab)
title("FUT Enfants Perceo")
tab <- tapply(perceo.adu$FUT, perceo.adu$annees, mean)
barplot(tab)
title("FUT Adultes Perceo")
tab <- tapply(clan.chi$INF, clan.chi$annees, mean)
barplot(tab)
title("INF Enfants CLAN")
pres <- function(champ) {
tab <- tapply(clan.chi[,champ], clan.chi$annees, mean)
barplot(tab)
title(paste(champ, "Enfants CLAN", ""))
tab <- tapply(clan.adu[,champ], clan.adu$annees, mean)
barplot(tab)
title(paste(champ, "Adultes CLAN", ""))
tab <- tapply(perceo.chi[,champ], perceo.chi$annees, mean)
barplot(tab)
title(paste(champ, "Enfants PERCEO", ""))
tab <- tapply(perceo.adu[,champ], perceo.adu$annees, mean)
barplot(tab)
title(paste(champ, "Adultes PERCEO", ""))
}
pres("SUBJ")
pres("INF")
pres("FUT")
pres("prorel")
pres("conj")
