install.packages("tm")
?tm
??tm
txt <- system.file("texts", "txt", package = "tm")
IPCCEn <- VCorpus(DirSource(txt, encoding = "UTF-8"), readerControl = list(language = "en"))
library(tm
)
IPCCEn <- VCorpus(DirSource(txt, encoding = "UTF-8"), readerControl = list(language = "en"))
View(IPCCEn)
IPCCEn[["AR2_en.txt"]][["content"]]
(IPCCEn[CR1]  <- VCorpus(DirSource(txt, encoding = "UTF-8"), readerControl = list(language = "en[CR2] ")))
(IPCCEn  <- VCorpus(DirSource(txt, encoding = "UTF-8"), readerControl = list(language = "en")))
IPCCEn2 <- tm_map(IPCCEn, stripWhitespace)
IPCCEn3 <- tm_map(IPCCEn2, removeWords, stopwords("english"))
IPCCEn3[1]
IPCCEn3[1]["Content"]
IPCCEn3[1]$Content
View(IPCCEn3)
View(IPCCEn3)
IPCCEn3$AR1_en.txt
IPCCEn3$AR1_en.txt$content
str(IPCCEn3$AR1_en.txt)
str(IPCCEn3)
IPCCEn3$AR1_en.txt$content[10]
str(IPCCEn3$AR1_en.txt$content)
IPCCEn3$AR1_en.txt
str(IPCCEn3$AR1_en.txt)
IPCCEn4 <- tm_map(IPCCEn3, stemDocument)
install.packages("SnowballC")
install.packages("Rtools")
IPCCEn4 <- tm_map(IPCCEn3, stemDocument)
dtm <-DocumentTermMatrix(IPCCEn4)
inspect(dtm)
inspect(dtm)
findFreqTerms(dtm, 20)
install.packages("tidytext")
library(tidytext)
df <- tidy(dtm)
PCA(df)
str(df)
library("FactoMineR")
install.packages("FactoMineR")
PCA(dtm)
library("FactoMineR")
PCA(dtm)
str(dtm)
decathlon2.active
decathlon2
install.packages("factoextra")
data(decathlon2)
library(factoextra)
data(decathlon2)
decathlon2.active <- decathlon2[1:23, 1:10]
str(decathlon2)
length(decathlon2$X100m)
length(decathlon2$Shot.put)
res.pca <- PCA(decathlon2.active, graph = FALSE)
PCA(dtm)
dtm2 <- cbind(dtm$i,dtm$j,dtm$v)i
dtm2 <- cbind(dtm$i,dtm$j,dtm$v)
dtm2 <- data.frame(dtm$i,dtm$j,dtm$v)
PCA(dtm2)
?anova
a <- c(1,2,3,4,5)
b <- c(12, 24, 48, 90, 130)
c <- cbind(a,b)
c
c <- as.datatable(cbind(a,b))
c <- as.data.table(cbind(a,b))
c <- as.data.frame(cbind(a,b))
c
lm(a ~ b, data=c)
anova(lm(a ~ b, data=c))
aov(lm(a ~ b, data=c))
summary(lm(a ~ b, data=c))
plot(a ~ b, data=c)
plot(lm(a ~ b, data=c))
lmer
test.cor(a, b)
cor.test(a, b)
cor.test(a, b)
cor.test(a, b, method='kendall')
c$a
install.packages(c("backports", "callr", "car", "carData", "cli", "clipr", "colorspace", "cowplot", "data.table", "dendextend", "digest", "dplyr", "ellipse", "ellipsis", "FactoMineR", "generics", "ggplot2", "ggpubr", "glue", "haven", "hunspell", "isoband", "ISOcodes", "labeling", "lme4", "magrittr", "maptools", "nloptr", "NLP", "openxlsx", "pillar", "pkgbuild", "pkgload", "processx", "ps", "purrr", "quantreg", "R6", "Rcpp", "readr", "reshape2", "rlang", "rprojroot", "rstudioapi", "scales", "slam", "sp", "stopwords", "stringi", "testthat", "tibble", "tidyr", "tidyselect", "tidytext", "tm", "vctrs", "withr", "xml2", "zip"))
install.packages("brms")
?brms
??brms
library(brms)
library('openxlsx')
setwd("/brainstorm/evalang/tcof")
tcofp <- read.delim2("nx-tcofperceo.csv")
tcofp$annee
tcofp <- read.delim("nx-tcofperceo.csv")
tcofp$annee
?read.delim
tcofp <- read.delim("nx-tcofperceo.csv", header=true)
tcofp <- read.delim("nx-tcofperceo.csv", header=T)
tcofp <- read.delim("nx-tcofperceo.csv", header=T)
tcofp$annee
tcofp <- read.delim("nx-tcofperceo.csv", header=T, row.names = 1)
View(tcofp)
View(tcofp)
View(tcofp)
tcofp <- read.delim("nx-tcofperceo.csv", header=F)
tcofp <- read.delim("nx-tcofperceo.csv")
tcofp <- read.delim("nx-tcofperceo.csv")
tcofp <- read.delim("nx-tcofperceo.csv")
View(tcofp)
tcofp2 <- tcofp[, tcofp$annee != 0 && !is.na(tcofp$annee)]
View(tcofp2)
View(tcofp2)
tcofp2$n.adj <- as.integer(tcofp2$n.adj)
sum(tcofp2$FUT)
tcofp2$FUT
tcofp2[,FUT]
tcofp2[,'FUT'']
''
tcofp2[,'FUT']
sum(tcofp2[,'FUT'])
sum(as.vector(tcofp2[,'FUT'])
)
as.vector(tcofp2[,'FUT'])
tcofp2 <- tcofp[, tcofp$annee != 0 & !is.na(tcofp$annee)]
which(tcofp$annee != 0 & !is.na(tcofp$annee))
which(tcofp$annee != 0 && !is.na(tcofp$annee))
tcofp[ , which(tcofp$annee != 0 & !is.na(tcofp$annee))]
tcofp2 <- tcofp[ !(tcofp$annee %in% c(0,NA)), ]
tcofp2$n.adj <- as.integer(tcofp2$n.adj)
sum(tcofp2$FUT)
sum[tcof[,c(8:25)]]
sum[tcofp2[,c(8:25)]]
sum[tcofp2[,c('FUT', 'CONJ', 'SUBJ')]]
sum(tcofp2[,c(8:25)])
sapply(c(8:25), function (x) { sum(tcofp2[ , x]) })
ponderations <- sapply(c(8:25), function (x) { sum(tcofp2[ , x]) }) / total
total <- sum(tcofp2[,c(8:25)])
ponderations <- sapply(c(8:25), function (x) { sum(tcofp2[ , x]) }) / total
sum(ponderations)
percentrow <- function(row) {
totalrow <- sum(tcofp2[row, c(8:25)])
sapply(c(8:25), function (x) { sum(tcofp2[row , x]) }) / totalrow
}
percentrow(8)
percentrow(1)
percentrow(c(8:25))
sapply(c(8:25), percentrow)
nbrow(tcofp2)
len(tcofp2[,1])
length(tcofp2[,1])
sapply(c(1:length(tcofp2[,1])), percentrow)
t3 <- sapply(c(1:length(tcofp2[,1])), percentrow)
View(t3)
t3 <- sapply(c(1:length(tcofp2[,1])), percentrow)
lapply(c(1:length(tcofp2[,1])), percentrow)
as.data.frame(lapply(c(1:length(tcofp2[,1])), percentrow))
t3 <- as.data.frame(lapply(c(1:length(tcofp2[,1])), percentrow))
colnames(t3) <- colnames(tcofp2)
t3 <- as.data.frame(lapply(c(1:length(tcofp2[,1])), percentrow))
colnames(tcofp2)
colnames(tcofp2)[8:25]
colnames(t3) <- colnames(tcofp2)[8:25]
t3 <- as.data.frame(lapply(c(1:length(tcofp2[,1])), percentrow))
t3 <- as.matrix(lapply(c(1:length(tcofp2[,1])), percentrow))
t3 <- (lapply(c(1:length(tcofp2[,1])), percentrow))
as.matrix
t3 <- as.matrix(lapply(c(1:length(tcofp2[,1])), percentrow))
colnames(t3) <- colnames(tcofp2)[8:25]
str(t3)
colnames(t3)
t3 <- as.data.frame(lapply(c(1:length(tcofp2[,1])), percentrow))
colnames(t3)
t3 <- as.data.frame(sapply(c(1:length(tcofp2[,1])), percentrow))
t3 <- as.data.frame(t(sapply(c(1:length(tcofp2[,1])), percentrow)))
t3 <- as.data.frame(t(sapply(c(1:length(tcofp2[,1])), percentrow)))
colnames(t3) <- colnames(tcofp2)[8:25]
rownames(t3) <- rownames(tcofp2)
write.csv(t3, file="nx-tcofperceo-percent.csv")
cbind(tcofp2, t3)
t4 <- cbind(tcofp2, t3)
write.csv(t4, file="nx-tcofperceo-percent.csv")
perceo.adu <- t4[t4['loc']=='ADU',]
perceo.chi <- perceo[perceo['loc']==' CHI ',]
perceo.chi.trans <- perceo.chi[perceo.chi['dossier']=='TRANS',]
str(perceo.chi)
perceo.adu <- t4[t4['loc']==' ADU ',]
str(perceo.adu)
t4 <- cbind(tcofp2[,c(1:7)], t3)
write.csv(t4, file="nx-tcofperceo-percent.csv")
t44 <- cbind(tcofp2, t3)
write.csv(t44, file="nx-tcofperceo-percent-all.csv")
perceo.adu <- t4[t4['loc']==' ADU ',]
str(perceo.adu)
perceo.chi <- t4[t4['loc']==' CHI ',]
perceo.chi.trans <- perceo.chi[perceo.chi['dossier']=='TRANS',]
perceo.chi.trans <- perceo.chi[perceo.chi['dossier']==' TRANS ',]
str(perceo.chi)
str(perceo.chi.trans)
plot(x=perceo.chi$annee, y=perceo.chi$FUT)
histt(x=perceo.chi$annee, y=perceo.chi$FUT)
hist(x=perceo.chi$annee, y=perceo.chi$FUT)
?hist
barplot(x=perceo.chi$annee, y=perceo.chi$FUT)
plot(x=perceo.chi$annee, y=perceo.chi$FUT)
plot(x=perceo.chi$annee, y=perceo.chi$INF)
corr(x=perceo.chi$annee, y=perceo.chi$INF)
cor(x=perceo.chi$annee, y=perceo.chi$INF)
tcofp <- read.delim("nx-tcofperceo.csv")
View(tcofp)
#supprimer les années à zéro ou à NA
tcofp2 <- tcofp[, tcofp$annee != 0 & !is.na(tcofp$annee)]
tcofp2 <- tcofp[ !(tcofp$annee %in% c(0,NA)), ]
tcofp2$n.adj <- as.integer(tcofp2$n.adj)
# calcul de la pondération des facteurs
# faire la somme pour chaque colonne
total <- sum(tcofp2[,c(8:25)])
ponderations <- sapply(c(8:25), function (x) { sum(tcofp2[ , x]) }) / total
# calculer les pourcentages
percentrow <- function(row) {
totalrow <- sum(tcofp2[row, c(8:25)])
sapply(c(8:25), function (x) { sum(tcofp2[row , x]) }) / totalrow
}
t3 <- as.data.frame(t(sapply(c(1:length(tcofp2[,1])), percentrow)))
colnames(t3) <- colnames(tcofp2)[8:25]
rownames(t3) <- rownames(tcofp2)
t44 <- cbind(tcofp2, t3)
write.csv(t44, file="nx-tcofperceo-percent-all.csv")
t4 <- cbind(tcofp2[,c(1:7)], t3)
write.csv(t4, file="nx-tcofperceo-percent.csv")
perceo.adu <- t4[t4['loc']==' ADU ',]
str(perceo.adu)
perceo.chi <- t4[t4['loc']==' CHI ',]
perceo.chi.trans <- perceo.chi[perceo.chi['dossier']==' TRANS ',]
str(perceo.chi)
str(perceo.chi.trans)
plot(x=perceo.chi$annee, y=perceo.chi$INF)
cor(x=perceo.chi$annee, y=perceo.chi$INF)
plot(x=perceo.chi$annee, y=perceo.chi$IMPF)
cor(x=perceo.chi$annee, y=perceo.chi$IMPF)
plot(x=perceo.chi$annee, y=perceo.chi$SUBJ)
sum(t4[2,])
t4(2,)
t4[2,]
as.vector(t4[2,])
sum(t4[2,])
sum(t4[2,c(8:25)])
# calculer les pourcentages
percentrow <- function(row) {
# totalrow <- sum(tcofp2[row, c(8:25)])
totalrow <- tcofp2[row, 'token']
sapply(c(8:25), function (x) { sum(tcofp2[row , x]) }) / totalrow
}
t3 <- as.data.frame(t(sapply(c(1:length(tcofp2[,1])), percentrow)))
colnames(t3) <- colnames(tcofp2)[8:25]
rownames(t3) <- rownames(tcofp2)
t44 <- cbind(tcofp2, t3)
write.csv(t44, file="nx-tcofperceo-percent-all.csv")
t4 <- cbind(tcofp2[,c(1:7)], t3)
write.csv(t4, file="nx-tcofperceo-percent.csv")
perceo.adu <- t4[t4['loc']==' ADU ',]
str(perceo.adu)
perceo.chi <- t4[t4['loc']==' CHI ',]
perceo.chi.trans <- perceo.chi[perceo.chi['dossier']==' TRANS ',]
str(perceo.chi)
str(perceo.chi.trans)
plot(x=perceo.chi$annee, y=perceo.chi$IMPF)
cor(x=perceo.chi$annee, y=perceo.chi$IMPF)
plot(x=perceo.chi$annee, y=perceo.chi$SUBJ)
sum(t4[2,])
sum(t4[2,c(8:25)])
plot(x=perceo.chi$annee, y=sum(perceo.chi[, c(8:25)])
)
plot(x=perceo.chi$annee, y=sum(perceo.chi[, c(8:25)]))
perceo.chi[, c(8:25)]
sum(perceo.chi[12, c(8:25)])
plot(x=perceo.chi$annee, y=sapply(perceo.chi[, c(8:25)], sum))
sapply(perceo.chi[, c(8:25)], sum)
lapply(perceo.chi[, c(8:25)], sum)
perceo.chi[12, c(8:25)]
perceo.chi[, c(8:25)]
t(as.matrix(perceo.chi[, c(8:25)]))
sapply(t(as.matrix(perceo.chi[, c(8:25)])), sum)
lapply(t(as.matrix(perceo.chi[, c(8:25)])), sum)
as.matrix(perceo.chi[, c(8:25)])
t(as.matrix(perceo.chi[, c(8:25)]))
sum(perceo.chi[12, c(8:25)])
length(row.names(perceo.chi))
sapply(c(1:length(row.names(perceo.chi))), function (x) { sum(perceo.chi[x, c(8:25)]) })
values <- sapply(c(1:length(row.names(perceo.chi))), function (x) { sum(perceo.chi[x, c(8:25)]) })
plot(x=perceo.chi$annee, y=values)
cor(x=perceo.chi$annee, y=values)
?density
density(x=perceo.chi$annee, y=values)
barplot(x=trunc(perceo.chi$annee), y=values)
barplot()
?barplot
hist(x=trunc(perceo.chi$annee), y=values)
?hist
barplot(table(trunc(perceo.chi$annee), values))
table(trunc(perceo.chi$annee), values)
trunc(perceo.chi$annee)
t5 <- cbind(t4, trunc(t4$annee))
View(t5)
View(t5)
t6 <- cbind(sapply(c(1:length(row.names(t5))), function (x) { sum(t5[x, c(8:25)]) }))
View(t6)
t6 <- cbind(t5, sapply(c(1:length(row.names(t5))), function (x) { sum(t5[x, c(8:25)]) }))
sommetot <- sapply(c(1:length(row.names(t5))), function (x) { sum(t5[x, c(8:25)]) })
besttot <- sapply(c(1:length(row.names(t5))), function (x) { sum(t5[x, c(8:12)]) })
t6 <- cbind(t5, sommetot, besttot)
?cbind
t5 <- cbind(t4, year=trunc(t4$annee))
sommetot <- sapply(c(1:length(row.names(t5))), function (x) { sum(t5[x, c(8:25)]) })
besttot <- sapply(c(1:length(row.names(t5))), function (x) { sum(t5[x, c(8:12)]) })
t6 <- cbind(t5, sommetot, besttot)
lm(year ~ sommetot, data=t6)
barplot(lm(year ~ sommetot, data=t6))
barplot(year ~ sommetot, data=t6)
t5 <- cbind(t4, year=as.factor(trunc(t4$annee))
t5 <- cbind(t4, year=as.factor(trunc(t4$annee)))
t5 <- cbind(t4, year=as.factor(trunc(t4$annee)))
sommetot <- sapply(c(1:length(row.names(t5))), function (x) { sum(t5[x, c(8:25)]) })
besttot <- sapply(c(1:length(row.names(t5))), function (x) { sum(t5[x, c(8:12)]) })
t6 <- cbind(t5, sommetot, besttot)
barplot(year ~ sommetot, data=t6)
barplot(sommetot ~ year, data=t6)
barplot(sommetot ~ year, data=t6)
View(t6)
View(t6)
?lm
table(sommetot ~ year, data=t6)
xtabs(sommetot ~ year, data=t6)
barplot(sommetot ~ year, data=t6)
View(perceo.chi.trans)
View(perceo.chi.trans)
perceo.adu <- t6[t6['loc']==' ADU ',]
str(perceo.adu)
perceo.chi <- t6[t6['loc']==' CHI ',]
perceo.chi.trans <- perceo.chi[perceo.chi['dossier']==' TRANS ',]
str(perceo.chi)
str(perceo.chi.trans)
plot(x=perceo.chi$annee, y=perceo.chi$sommetot)
cor(x=perceo.chi$annee, y=perceo.chi$sommetot)
cor(x=perceo.chi$annee, y=perceo.chi$besttot)
plot(x=perceo.chi$annee, y=perceo.chi$besttot)
xtabs(sommetot ~ year, data=perceo.chi.trans)
barplot(sommetot ~ year, data=perceo.chi.trans)
tapply(perceo.chi.trans$sommetot, perceo.chi.trans$year, mean)
tapply(t6$sommetot, t6$year, mean)
xtabs(sommetot ~ year, data=t6)
plot(xtabs(sommetot ~ year, data=t6))
plot(tapply(t6$sommetot, t6$year, mean))
plot(tapply(t6$besttot, t6$year, mean))
tapply(t6$impf, t6$year, mean)
tapply(t6$IMPF, t6$year, mean)
tapply(tcofp2$IMPF, tcofp2$year, mean)
tapply(tcofp2$IMPF, t6$year, mean)
plot(tapply(t6$IMPF, t6$year, mean))
plot(tapply(tcofp2$IMPF, t6$year, mean))
